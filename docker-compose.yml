---
version: "2.2"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    container_name: zookeeper

  kafka:
    image: confluentinc/cp-kafka:4.1.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    container_name: kafka

  kafka2s3:
    image: kafka2s3:latest
    build: ./
    depends_on:
      - kafka
    environment:
      K2S3_KAFKA_INSECURE: "true"
      K2S3_KAFKA_TOPIC_REGEX: "^test-(.*)"
      K2S3_KAFKA_META_REFRESH_MS: "1000"
      K2S3_KAFKA_POLL_TIMEOUT: "PT10S"

  aws-s3:
    image: localstack/localstack:latest
    ports:
      - '4563-4584:4563-4584'
      - '8055:8080'
    container_name: aws-s3
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/opt/s3/data
    container_name: aws-s3
    healthcheck:
      test: awslocal s3 ls
      interval: 3s
      timeout: 10s

  s3-provision:
    image: s3-bucket-provision
    build:
      dockerfile: s3.provision.Dockerfile
      context: ./
    container_name: s3-bucket-provision
    depends_on:
      - aws-s3
    environment:
      - S3_SERVICE_ENDPOINT=http://aws-s3:4572
      - AWS_REGION=eu-west-2
      - AWS_DEFAULT_REGION=eu-west-2
      - AWS_ACCESS_KEY_ID=aws-access-key
      - AWS_SECRET_ACCESS_KEY=aws-secret-access-key
      - S3_BUCKET=kafka2s3

  integration-test:
    image: kafka2s3-integration:latest
    build:
      dockerfile: integration.Dockerfile
      context: ./
    depends_on:
      - kafka2s3
    command: "true"
    environment:
      SUID: ${UID-1000}
      SGID: ${GROUPS-1000}
      K2S3_KAFKA_INSECURE: "true"
